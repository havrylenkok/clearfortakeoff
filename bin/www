#!/usr/bin/env node

/**
 * Module dependencies.
 */

var app = require('../app');
var debug = require('debug')('clearfortakeoff-git:server');
var http = require('http');
var mysql = require('mysql');

/**
 * Get port from environment and store in Express.
 */

app.set('port', process.env.OPENSHIFT_NODEJS_PORT || 3000);
app.set('ip', process.env.OPENSHIFT_NODEJS_IP || '127.0.0.1');

/*
 * Connect to mysql database
 */

// app.set('mysqlHost', process.env.OPENSHIFT_MYSQL_DB_HOST || '127.0.0.1');
// app.set('mysqlPort', process.env.OPENSHIFT_MYSQL_DB_PORT || 3306);
// app.set('mysqlUser', process.env.OPENSHIFT_MYSQL_DB_USERNAME || 'admin');
// app.set('mysqlPass', process.env.OPENSHIFT_MYSQL_DB_PASSWORD || 'password');
// app.set('mysqlDb', process.env.OPENSHIFT_MYSQL_DB_URL || 'databasename');
// app.set('mysqlString', 'mysql://' + app.get('mysqlUser') + ':' + app.get('mysqlPass') + '@' + app.get('mysqlHost') + ':' + app.get('mysqlPort') + '/' + app.get('mysqlDb'));
//
// var mysqlClient = mysql.createConnection(app.get('mysqlString'));
// mysqlClient.connect(function (err) {
//     if (err) {
//         debug('Database connection error ' + err);
//         throw err;
//     } else {
//         debug('Connected to the mysql database');
//     }
// });
// app.set('mysqlClient', mysqlClient);

/**
 * Create HTTP server.
 */

var server = http.createServer(app).listen(app.get('port'), app.get('ip'), function () {
    debug('Listening ' + app.get('ip') + ' on port ' + app.get('port'));
});

// /**
//  * Listen on provided port, on all network interfaces.
//  */
//
// server.listen(port, ipadress);
// server.on('error', onError);
// server.on('listening', onListening);
//
// /**
//  * Normalize a port into a number, string, or false.
//  */
//
// function normalizePort(val) {
//   var port = parseInt(val, 10);
//
//   if (isNaN(port)) {
//     // named pipe
//     return val;
//   }
//
//   if (port >= 0) {
//     // port number
//     return port;
//   }
//
//   return false;
// }
//
// /**
//  * Event listener for HTTP server "error" event.
//  */
//
// function onError(error) {
//   if (error.syscall !== 'listen') {
//     throw error;
//   }
//
//   var bind = typeof port === 'string'
//     ? 'Pipe ' + port
//     : 'Port ' + port;
//
//   // handle specific listen errors with friendly messages
//   switch (error.code) {
//     case 'EACCES':
//       console.error(bind + ' requires elevated privileges');
//       process.exit(1);
//       break;
//     case 'EADDRINUSE':
//       console.error(bind + ' is already in use');
//       process.exit(1);
//       break;
//     default:
//       throw error;
//   }
// }
//
// /**
//  * Event listener for HTTP server "listening" event.
//  */
//
// function onListening() {
//   // var addr = server.address();
//   // var bind = typeof addr === 'string'
//   //   ? 'pipe ' + addr
//   //   : 'port ' + addr.port;
//   debug('Listening ' + ipadress + ' on ' + port);
// }
